#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{matlab-prettifier}
\usepackage{geometry}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "style={Matlab-editor}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Furuta Pendulum Virtual Laboratory Experiment
\end_layout

\begin_layout Author
Filippo Badalamenti (Occasional FT, CID: 01998569)
\end_layout

\begin_layout Standard
This paper will follow the structure presented in the assignment.
 All the Matlab code, images and resources used are available at the following
 link: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/fil-bad/Furuta_pendulum
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{part}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Part
Derivation of the model
\end_layout

\begin_layout Section
From Lagrange equation to mechanical models
\end_layout

\begin_layout Standard
Given the classical Lagrangian function: 
\begin_inset Formula 
\[
L\left(q\left(t\right),\dot{q}\left(t\right)\right)=T\left(q\left(t\right),\dot{q}\left(t\right)\right)-V\left(q\left(t\right)\right)
\]

\end_inset

we can use it to derive the nonlinear model.
 In our particular case, the generalized coordinates are: 
\begin_inset Formula 
\[
\left(q,\dot{q}\right)=\left(\begin{bmatrix}\theta\left(t\right) & \alpha\left(t\right)\end{bmatrix},\begin{bmatrix}\dot{\theta}\left(t\right) & \dot{\alpha}\left(t\right)\end{bmatrix}\right)
\]

\end_inset

while the Lagrangian equation becomes:
\begin_inset Formula 
\begin{multline*}
L=\frac{1}{2}J_{arm}\dot{\theta}^{2}+\frac{1}{2}J_{p}\dot{\alpha}^{2}+\frac{1}{2}m_{p}\left(-\cos\left(\theta\right)\sin\left(\alpha\right)\dot{\theta}l_{p}-\sin\left(\theta\right)\cos\left(\alpha\right)\dot{\alpha}l_{p}-\sin\left(\theta\right)\dot{\theta}r\right)^{2}+\\
+\frac{1}{2}m_{p}\left(-\sin\left(\theta\right)\sin\left(\alpha\right)\dot{\theta}l_{p}+\cos\left(\theta\right)\cos\left(\alpha\right)\dot{\alpha}l_{p}+\cos\left(\theta\right)\dot{\theta}r\right)^{2}+\frac{1}{2}m_{p}\sin\left(\alpha\right)^{2}\dot{\alpha}^{2}l_{p}^{2}+m_{p}\cos\left(\alpha\right)gl_{p}
\end{multline*}

\end_inset


\end_layout

\begin_layout Standard
Finally, the Euler-Lagrange equation can be expressed as:
\begin_inset Formula 
\[
\frac{d}{dt}\frac{\partial L}{\partial\dot{q}}-\frac{\partial L}{\partial q}=\tau
\]

\end_inset

that is formed by two equations in column:
\begin_inset Formula 
\[
\begin{bmatrix}\frac{d}{dt}\frac{\partial L}{\partial\dot{\theta}}-\frac{\partial L}{\partial\theta}\\
\\
\frac{d}{dt}\frac{\partial L}{\partial\dot{\alpha}}-\frac{\partial L}{\partial\alpha}
\end{bmatrix}=\tau
\]

\end_inset

Then, we can calculate each partial derivative of the Lagrangian equation:
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset Formula 
\begin{align*}
\boldsymbol{\frac{\partial L}{\partial\theta}} & \boldsymbol{=}m_{p}\left(-\cos\left(\theta\right)\sin\left(\alpha\right)\dot{\theta}l_{p}-\sin\left(\theta\right)\cos\left(\alpha\right)\dot{\alpha}l_{p}-\sin\left(\theta\right)\dot{\theta}r\right)\left(\sin\left(\theta\right)\sin\left(\alpha\right)\dot{\theta}l_{p}-\cos\left(\theta\right)\cos\left(\alpha\right)\dot{\alpha}l_{p}-\cos\left(\theta\right)\dot{\theta}r\right)+\\
 & +m_{p}\left(-\sin\left(\theta\right)\sin\left(\alpha\right)\dot{\theta}l_{p}+\cos\left(\theta\right)\cos\left(\alpha\right)\dot{\alpha}l_{p}+\cos\left(\theta\right)\dot{\theta}r\right)\left(-\cos\left(\theta\right)\sin\left(\alpha\right)\dot{\theta}l_{p}-\sin\left(\theta\right)\cos\left(\alpha\right)\dot{\alpha}l_{p}-\sin\left(\theta\right)\dot{\theta}r\right)=\\
\dots & \boldsymbol{=}\mathbf{0}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset Formula 
\begin{eqnarray*}
\boldsymbol{\frac{\partial L}{\partial\dot{\theta}}} & = & J_{\mathrm{arm}}\dot{\theta}+m_{p}\left(r\cos\left(\theta\right)-l_{p}\sin\left(\alpha\right)\sin\left(\theta\right)\right)\left(r\cos\left(\theta\right)\dot{\theta}-l_{p}\sin\left(\alpha\right)\sin\left(\theta\right)\dot{\theta}+l_{p}\cos\left(\alpha\right)\cos\left(\theta\right)\dot{\alpha}\right)+\\
 & + & m_{p}\left(r\sin\left(\theta\right)+l_{p}\sin\left(\alpha\right)\cos\left(\theta\right)\right)\left(r\sin\left(\theta\right)\dot{\theta}+l_{p}\cos\left(\alpha\right)\sin\left(\theta\right)\dot{\alpha}+l_{p}\sin\left(\alpha\right)\cos\left(\theta\right)\dot{\theta}\right)\\
\boldsymbol{\frac{d}{dt}\left(\frac{\partial L}{\partial\dot{\theta}}\right)} & = & J_{arm}\ddot{\theta}-m_{p}\left(r\cos\left(\theta\right)-l_{p}\sin\left(\alpha\right)\sin\left(\theta\right)\right)\left(r\sin\left(\theta\right)\dot{\theta}^{2}-r\cos\left(\theta\right)\ddot{\theta}+l_{p}\sin\left(\alpha\right)\cos\left(\theta\right)\dot{\alpha}^{2}-\right.\\
 & - & \left.l_{p}\cos\left(\alpha\right)\cos\left(\theta\right)\ddot{\alpha}+l_{p}\sin\left(\alpha\right)\cos\left(\theta\right)\dot{\theta}^{2}+l_{p}\sin\left(\alpha\right)\sin\left(\theta\right)\ddot{\theta}+2l_{p}\cos\left(\alpha\right)\sin\left(\theta\right)\dot{\theta}\dot{\alpha}\right)+\\
 & + & m_{p}\left(r\sin\left(\theta\right)+l_{p}\sin\left(\alpha\right)\cos\left(\theta\right)\right)\left(r\cos\left(\theta\right)\dot{\theta}^{2}+r\sin\left(\theta\right)\ddot{\theta}-l_{p}\sin\left(\alpha\right)\sin\left(\theta\right)\dot{\alpha}^{2}+\right.\\
 & + & \left.l_{p}\cos\left(\alpha\right)\sin\left(\theta\right)\ddot{\alpha}-l_{p}\sin\left(\alpha\right)\sin\left(\theta\right)\dot{\theta}^{2}+l_{p}\sin\left(\alpha\right)\cos\left(\theta\right)\ddot{\theta}+2l_{p}\cos\left(\alpha\right)\cos\left(\theta\right)\dot{\theta}\dot{\alpha}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Once calculated, we can assemble the two equations, and simplifying them
 we get: 
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset Formula 
\begin{gather*}
\boldsymbol{\frac{d}{dt}\frac{\partial L}{\partial\dot{\theta}}\cancel{-\frac{\partial L}{\partial\theta}}}=J_{arm}\ddot{\theta}-m_{p}l_{p}^{2}\cos\left(\alpha\right)^{2}\ddot{\theta}+m_{p}l_{p}^{2}\ddot{\theta}+m_{p}l_{p}r\cos\left(\alpha\right)\ddot{\alpha}+m_{p}r^{2}\ddot{\theta}-m_{p}\sin\left(\alpha\right)l_{p}r\dot{\alpha}^{2}+2m_{p}\sin\left(\alpha\right)\dot{\theta}l_{p}^{2}\cos\left(\alpha\right)\dot{\alpha}
\end{gather*}

\end_inset


\end_layout

\begin_layout Standard
The same thing can be done for the 
\begin_inset Formula $\alpha\left(t\right)$
\end_inset

 variable, and writing down the equation with the least amount of terms,
 lead us to:
\size footnotesize

\begin_inset Formula 
\begin{gather*}
\boldsymbol{\frac{\partial L}{\partial\alpha}}=-l_{p}m_{p}\left(-\frac{1}{2}l_{p}\sin\left(2\alpha\right)\dot{\theta}^{2}+r\sin\left(\alpha\right)\dot{\theta}\dot{\alpha}+g\sin\left(\alpha\right)\right)
\end{gather*}

\end_inset


\begin_inset Formula 
\begin{gather*}
\boldsymbol{\frac{\partial L}{\partial\dot{\alpha}}}=m_{p}l_{p}^{2}\dot{\alpha}+m_{p}r\cos\left(\alpha\right)l_{p}\dot{\theta}+J_{p}\dot{\alpha}\\
\boldsymbol{\frac{d}{dt}\left(\frac{\partial L}{\partial\dot{\alpha}}\right)}=m_{p}l_{p}^{2}\ddot{\alpha}+m_{p}r\cos\left(\alpha\right)l_{p}\ddot{\theta}+J_{p}\ddot{\alpha}-m_{p}r\sin\left(\alpha\right)\dot{\theta}l_{p}\dot{\alpha}
\end{gather*}

\end_inset


\size default
 
\size footnotesize

\begin_inset Formula 
\begin{gather*}
\boldsymbol{\frac{d}{dt}\frac{\partial L}{\partial\dot{\alpha}}-\frac{\partial L}{\partial\alpha}}=\left(m_{p}l_{p}^{2}+J_{p}\right)\ddot{\alpha}+m_{p}r\cos\left(\alpha\right)l_{p}\ddot{\theta}-m_{p}\cos\left(\alpha\right)\sin\left(\alpha\right)l_{p}^{2}\dot{\theta}^{2}+gm_{p}\sin\left(\alpha\right)l_{p}
\end{gather*}

\end_inset


\end_layout

\begin_layout Standard
Equalling the vector: 
\begin_inset Formula 
\[
\tau=\begin{bmatrix}\tau_{m}-B_{arm}\dot{\theta}\left(t\right)\\
-B_{p}\dot{\alpha}\left(t\right)
\end{bmatrix},\tau_{m}=\frac{\eta_{g}K_{g}\eta_{m}K_{t}\left(V_{m}-K_{g}K_{m}\dot{\theta}\right)}{R_{m}}
\]

\end_inset

to the results found above, finally leads to the nonlinear model expressed
 in the equations (7) and (8) of the assignment.
\end_layout

\begin_layout Section
Matricial model
\end_layout

\begin_layout Standard
Our model can be rewritten in the form: 
\begin_inset Formula 
\[
D\left(q\left(t\right)\right)\ddot{q}\left(t\right)+C\left(q\left(t\right),\dot{q}\left(t\right)\right)\dot{q}\left(t\right)+g\left(q\left(t\right)\right)=\tau
\]

\end_inset


\end_layout

\begin_layout Standard
where the 
\begin_inset Formula $C\left(q\left(t\right),\dot{q}\left(t\right)\right)$
\end_inset

 matrix is not uniquely defined due to mixed product terms in the equations;
 a possible representation is given by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{gather*}
D=\begin{bmatrix}m_{p}r^{2}+m_{p}l_{p}^{2}-m_{p}l_{p}^{2}\cos\left(\alpha\right)^{2}+J_{arm} & m_{p}\cos\left(\alpha\right)l_{p}r\\
m_{p}\cos\left(\alpha\right)l_{p}r & J_{p}+m_{p}l_{p}^{2}
\end{bmatrix}\\
C=\begin{bmatrix}2m_{p}\cos\left(\alpha\right)\dot{\alpha}l_{p}^{2}\sin\left(\alpha\right) & -m_{p}\sin\left(\alpha\right)\dot{\alpha}l_{p}r\\
-m_{p}\cos\left(\alpha\right)\dot{\theta}l_{p}^{2}\sin\left(\alpha\right) & 0
\end{bmatrix}\ g=\begin{bmatrix}0\\
m_{p}g\sin\left(\alpha\right)l_{p}
\end{bmatrix}
\end{gather*}

\end_inset


\end_layout

\begin_layout Part
Linear System Analysis
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{section}{0}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Linearizing the model
\end_layout

\begin_layout Standard
The matrix equation is not linear; in fact, each matrix is not made by constant
 values, instead they depend from the coordinates 
\begin_inset Formula $q\left(t\right)$
\end_inset

 (the angular position of each section of the pendulum) and/or from their
 derivative 
\begin_inset Formula $\dot{q}\left(t\right)$
\end_inset

 (the angular speed).
 For this reason, we can linearize the model in its two equilibrium points
 (as we will see from further analysis), the 
\emph on
downward
\emph default
 position and the 
\emph on
upward
\emph default
 position.
\end_layout

\begin_layout Standard
We can then proceed in two ways: 
\end_layout

\begin_layout Itemize
Neglecting any term with order higher than linear.
 This can be done using the formula 
\begin_inset Formula $f\left(x\right)\thickapprox f\left(x_{0}\right)+f'\left(x_{0}\right)\left(x-x_{0}\right)$
\end_inset

, that leads for the trigonometric functions to: 
\size footnotesize

\begin_inset Formula 
\begin{align*}
\begin{cases}
\left.\sin\left(x\right)\right|_{x_{0}=0}\thickapprox\sin\left(0\right)+\cos\left(0\right)\left(x-0\right)=x\\
\left.\cos\left(x\right)\right|_{x_{0}=0}\thickapprox\cos\left(0\right)+\sin\left(0\right)\left(x-0\right)=1
\end{cases} & \begin{cases}
\left.\sin\left(x\right)\right|_{x_{0}=\pi}\thickapprox\sin\left(\pi\right)+\cos\left(\pi\right)\left(x-\pi\right)=-x+\pi\\
\left.\cos\left(x\right)\right|_{x_{0}=\pi}\thickapprox\cos\left(\pi\right)+\sin\left(\pi\right)\left(x-\pi\right)=-1
\end{cases}
\end{align*}

\end_inset


\size default
considering the two equilibria later involved.
\end_layout

\begin_layout Itemize
Linearize the system around the equilibrium points; in fact, it is legit
 to assume that both angular speeds are equal to zero – being these positions
 with constant value –, thus allowing us to linearize the system rewritten
 in the form 
\begin_inset Formula $\dot{x}=f\left(x,u\right)$
\end_inset

 around 
\begin_inset Formula $x_{e}$
\end_inset

, following the formula: 
\begin_inset Formula 
\[
\dot{\delta x}=\frac{\partial}{\partial x}f\left(x_{e},u_{e}\right)\delta x+\frac{\partial}{\partial u}f\left(x_{e},u_{e}\right)\delta u
\]

\end_inset

where 
\begin_inset Formula $\delta x,\delta u$
\end_inset

 are the increments, and 
\begin_inset Formula $\frac{\partial f}{\partial x},\frac{\partial f}{\partial u}$
\end_inset

 are the Jacobian matrices with respect to the state and input vectors;
 finally, defining:
\begin_inset Formula 
\[
A=\left.\frac{\partial}{\partial x}f\left(x,u\right)\right|_{x=x_{e}}\ B=\left.\frac{\partial}{\partial u}f\left(x,u\right)\right|_{x=x_{e}}
\]

\end_inset

we get a linear system in the form 
\begin_inset Formula $\dot{x}=Ax+Bu$
\end_inset

.
\end_layout

\begin_layout Standard
Due to a greater familiarity with the second method, the further dissertation
 will follow the latter one.
\end_layout

\begin_layout Subsection
Downward position, 
\begin_inset Formula $\left(\theta,\alpha\right)=\left(0,0\right)$
\end_inset


\end_layout

\begin_layout Standard
For this position, we can define the equilibrium point 
\begin_inset Formula $\begin{pmatrix}\theta & \alpha & \dot{\theta} & \dot{\alpha}\end{pmatrix}^{T}=\begin{pmatrix}0 & 0 & 0 & 0\end{pmatrix}^{T}$
\end_inset

.
 Moreover, in order to linearize around this point, we have to rewrite the
 equation in the form: 
\begin_inset Formula 
\[
\dot{x}=\begin{pmatrix}\dot{q}\\
\ddot{q}
\end{pmatrix}=\begin{pmatrix}\begin{bmatrix}\dot{\theta}\\
\dot{\alpha}
\end{bmatrix}\\
D^{-1}\left(\tau-g-C\begin{bmatrix}\dot{\theta}\\
\dot{\alpha}
\end{bmatrix}\right)
\end{pmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
However, the matrix 
\begin_inset Formula $D$
\end_inset

 must be invertible, and this is true if and only if 
\begin_inset Formula $\det\left(D\right)\neq0$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\det\left(D\right)=\left(m_{p}r^{2}+m_{p}l_{p}^{2}-m_{p}l_{p}^{2}\cos\left(\alpha\right)^{2}+J_{arm}\right)\left(J_{p}+m_{p}l_{p}^{2}\right)-\left(m_{p}\cos\left(\alpha\right)l_{p}r\right)^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
Considering that all the physical constants have sense only when they are
 strictly positive, we can do some considerations:
\end_layout

\begin_layout Itemize
for 
\begin_inset Formula $\alpha=\pm\frac{\pi}{2}$
\end_inset

, the determinant is always sign definite and positive;
\end_layout

\begin_layout Itemize
for 
\begin_inset Formula $\alpha\neq\pm\frac{\pi}{2}$
\end_inset

 (and assuming it to be w.l.o.g.
 equal to 
\begin_inset Formula $k\pi,\ k\in\mathbb{Z}$
\end_inset

, so that we consider the most negative case), we get:
\begin_inset Formula 
\[
\left(m_{p}r^{2}+J_{arm}\right)\left(J_{p}+m_{p}l_{p}^{2}\right)-\left(m_{p}l_{p}r\right)^{2}
\]

\end_inset

so it is enough that the equation, once the real values are replaced, it
 is not fullfilled at the equality with zero.
\end_layout

\begin_layout Standard
Once ensured this, we can then write down the state space equations
\begin_inset Foot
status open

\begin_layout Plain Layout
For simplicity, we will treat (Q1) and (Q2) of Part III at the same moment,
 writing directly the state space representation.
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{bmatrix}x_{1}\left(t\right) & x_{2}\left(t\right) & x_{3}\left(t\right) & x_{4}\left(t\right)\end{bmatrix}^{T}=\begin{bmatrix}\theta\left(t\right) & \alpha\left(t\right) & \dot{\theta}\left(t\right) & \dot{\alpha}\left(t\right)\end{bmatrix}^{T}
\]

\end_inset


\end_layout

\begin_layout Standard
so that we can rewrite the equation as:
\begin_inset Formula 
\[
\dot{x}=\begin{pmatrix}\dot{x}_{1}\\
\dot{x}_{2}\\
\dot{x}_{3}\\
\dot{x}_{4}
\end{pmatrix}=\begin{pmatrix}x_{3}\\
x_{4}\\
D^{-1}\left(\tau-g-C\begin{bmatrix}x_{3}\\
x_{4}
\end{bmatrix}\right)
\end{pmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
where: 
\begin_inset Formula 
\[
D^{-1}=\frac{1}{\det\left(D\right)}\begin{bmatrix}D_{22} & -D_{12}\\
-D_{21} & D_{11}
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
and 
\begin_inset Formula $D_{ij}$
\end_inset

 denote the component of the matrix 
\begin_inset Formula $D$
\end_inset

 in the 
\emph on
i
\emph default
-row, 
\emph on
j
\emph default
-column position.
\end_layout

\begin_layout Standard
Then, we can linearize the system through the Jacobian operator, and after
 that evaluating the resulting matrices in the equilibrium point 
\begin_inset Formula $x_{down}$
\end_inset

 (thanks to the 
\emph on
subs
\emph default
 function in Matlab).
\end_layout

\begin_layout Standard
Without writing the full matrix equations (they are difficult to fit in
 a page), the resulting ones of the linearized system are:
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Formula 
\begin{alignat*}{1}
A_{d} & =\left.\frac{\partial}{\partial x}f\left(x,u\right)\right|_{x=x_{down}}=\begin{bmatrix}0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\\
0 & \frac{gl_{p}^{2}m_{p}^{2}r}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}} & -\frac{\left(m_{p}l_{p}^{2}+J_{p}\right)\left(B_{arm}+\frac{\eta_{g}\eta_{m}K_{g}^{2}K_{m}K_{t}}{R_{m}}\right)}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}} & \frac{B_{p}l_{p}m_{p}r}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}}\\
0 & -\frac{gl_{p}m_{p}\left(m_{p}r^{2}+J_{arm}\right)}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}} & \frac{l_{p}m_{p}r\left(B_{arm}+\frac{\eta_{g}\eta_{m}K_{g}^{2}K_{m}K_{t}}{R_{m}}\right)}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}} & -\frac{B_{p}\left(m_{p}r^{2}+J_{arm}\right)}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}}
\end{bmatrix}\\
B_{d} & =\left.\frac{\partial}{\partial u}f\left(x,u\right)\right|_{x=x_{down}}=\begin{bmatrix}\begin{array}{c}
0\\
0\\
\frac{\eta_{g}\eta_{m}K_{g}K_{t}\left(m_{p}l_{p}^{2}+J_{p}\right)}{R_{m}\left(J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}\right)}\\
-\frac{\eta_{g}\eta_{m}K_{g}K_{t}l_{p}m_{p}r}{R_{m}\left(J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}\right)}
\end{array}\end{bmatrix}
\end{alignat*}

\end_inset


\end_layout

\begin_layout Subsection
Upward position, 
\begin_inset Formula $\left(\theta,\alpha\right)=\left(0,\pi\right)$
\end_inset


\end_layout

\begin_layout Standard
Following the same approach as before, we have as equilibrium point 
\begin_inset Formula $\begin{pmatrix}\theta & \alpha & \dot{\theta} & \dot{\alpha}\end{pmatrix}^{T}=\begin{pmatrix}0 & \pi & 0 & 0\end{pmatrix}^{T}$
\end_inset

.
 Since the state vector that we have to find out is 
\begin_inset Formula $\begin{bmatrix}x_{1}\left(t\right) & x_{2}\left(t\right) & x_{3}\left(t\right) & x_{4}\left(t\right)\end{bmatrix}^{T}=\begin{bmatrix}\theta\left(t\right) & \alpha\left(t\right)-\pi & \dot{\theta}\left(t\right) & \dot{\alpha}\left(t\right)\end{bmatrix}^{T}$
\end_inset

, this means that we can change the coordinates for 
\begin_inset Formula $\alpha$
\end_inset

 so that, when we will linearize, we do it around the new origin.
 Another approach is to leave the equations unchanged, then linearize around
 the equilibrium point expressed as function of 
\begin_inset Formula $\theta$
\end_inset

 and 
\begin_inset Formula $\alpha$
\end_inset

, and only after that consider the equilibrium point in the new coordinates
 (in fact, 
\begin_inset Formula $x_{2}=\alpha-\pi\stackrel{\alpha=\pi}{\Longrightarrow}x_{2}=0,x_{2}+\pi=\alpha$
\end_inset

 ).
 
\end_layout

\begin_layout Standard
If we proceed as seen above, the system becomes:
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Formula 
\begin{alignat*}{1}
A_{u} & =\left.\frac{\partial}{\partial x}f\left(x,u\right)\right|_{x=x_{up}}=\begin{bmatrix}0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\\
0 & \frac{gl_{p}^{2}m_{p}^{2}r}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}} & -\frac{\left(m_{p}l_{p}^{2}+J_{p}\right)\left(B_{arm}+\frac{\eta_{g}\eta_{m}K_{g}^{2}K_{m}K_{t}}{R_{m}}\right)}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}} & -\frac{B_{p}l_{p}m_{p}r}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}}\\
0 & \frac{gl_{p}m_{p}\left(m_{p}r^{2}+J_{arm}\right)}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}} & -\frac{l_{p}m_{p}r\left(B_{arm}+\frac{\eta_{g}\eta_{m}K_{g}^{2}K_{m}K_{t}}{R_{m}}\right)}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}} & -\frac{B_{p}\left(m_{p}r^{2}+J_{arm}\right)}{J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}}
\end{bmatrix}\\
B_{u} & =\left.\frac{\partial}{\partial u}f\left(x,u\right)\right|_{x=x_{up}}=\begin{bmatrix}\begin{array}{c}
0\\
0\\
\frac{\eta_{g}\eta_{m}K_{g}K_{t}\left(m_{p}l_{p}^{2}+J_{p}\right)}{R_{m}\left(J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}\right)}\\
\frac{\eta_{g}\eta_{m}K_{g}K_{t}l_{p}m_{p}r}{R_{m}\left(J_{arm}m_{p}l_{p}^{2}+J_{p}m_{p}r^{2}+J_{arm}J_{p}\right)}
\end{array}\end{bmatrix}
\end{alignat*}

\end_inset


\end_layout

\begin_layout Part
System Analysis
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{section}{0}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Evaluating A, B matrices and assessing stability
\end_layout

\begin_layout Subsection
Downward position
\end_layout

\begin_layout Standard
Using the values given in the Table 1 of the assessment, and substituting
 it in the two matrices, we get:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{gather*}
A_{d}=\begin{bmatrix}0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\\
0 & \frac{5169259020477411}{97834235525000} & -\frac{15506119043916576}{794903163640625} & \frac{2559865848}{3913369421}\\
\\
0 & -\frac{38382920592829641}{391336942100000} & \frac{15475651065023064}{794903163640625} & -\frac{4751896122}{3913369421}
\end{bmatrix}\approx\begin{bmatrix}0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\\
0 & 52.837 & −19.507 & 0.654\\
0 & -98.082 & 19.469 & −1.214
\end{bmatrix}\\
\\
B_{d}=\begin{bmatrix}0\\
0\\
\frac{44598579129216}{1271845061825}\\
\\
-\frac{44510947365024}{1271845061825}
\end{bmatrix}\approx\begin{bmatrix}0\\
0\\
35.066\\
-34.997
\end{bmatrix}
\end{gather*}

\end_inset


\end_layout

\begin_layout Standard
Now, to assess the stability property, we have to remember that for a linearized
 system we have to look at the eigenvalues of the matrix 
\begin_inset Formula $A=\frac{\partial}{\partial x}f\left(x_{e},u_{e}\right)$
\end_inset

, for which three possible cases arise:
\end_layout

\begin_layout Enumerate
The matrix 
\begin_inset Formula $\frac{\partial}{\partial x}f\left(x_{e},u_{e}\right)$
\end_inset

 is Hurwitz.
 This means that:
\begin_inset Formula 
\[
\forall\lambda_{i}\in eigs\left(\frac{\partial}{\partial x}f\left(x_{e},u_{e}\right)\right)=\left\{ \lambda_{1},\dots,\lambda_{n}\right\} :Re\left\{ \lambda_{i}\right\} <0
\]

\end_inset

In this case, the equilibrium is 
\emph on
locally asymptotically stable
\emph default
.
\end_layout

\begin_layout Enumerate
The matrix 
\begin_inset Formula $\frac{\partial}{\partial x}f\left(x_{e},u_{e}\right)$
\end_inset

 is such that: 
\begin_inset Formula 
\[
\exists\lambda_{i}\in eigs\left(\frac{\partial}{\partial x}f\left(x_{e},u_{e}\right)\right)=\left\{ \lambda_{1},\dots,\lambda_{n}\right\} :Re\left\{ \lambda_{i}\right\} >0
\]

\end_inset

In this case, the equilibrium is 
\emph on
unstable
\emph default
.
\end_layout

\begin_layout Enumerate
The matrix 
\begin_inset Formula $\frac{\partial}{\partial x}f\left(x_{e},u_{e}\right)$
\end_inset

 is such that: 
\begin_inset Formula 
\[
\begin{cases}
\forall\lambda_{i}\in eigs\left(\frac{\partial}{\partial x}f\left(x_{e},u_{e}\right)\right)=\left\{ \lambda_{1},\dots,\lambda_{n}\right\} :Re\left\{ \lambda_{i}\right\} \leq0\\
\exists\lambda_{j}:Re\left\{ \lambda_{j}\right\} =0
\end{cases}
\]

\end_inset

In this case, we 
\emph on
cannot assess anything
\emph default
.
\end_layout

\begin_layout Standard
For the downward position, the eigenvalues are:
\begin_inset Formula 
\[
eigs(A_{d})=\left\{ \begin{array}{c}
0\\
-\frac{1222738973915481}{70368744177664}\\
-\frac{3766174288345861}{2251799813685248}+j\frac{976194666914269}{140737488355328}\\
-\frac{3766174288345861}{2251799813685248}-j\frac{976194666914269}{140737488355328}
\end{array}\right\} \approx\left\{ \begin{array}{c}
0\\
−17.376\\
-1.673+j6.936\\
-1.673-j6.936
\end{array}\right\} 
\]

\end_inset

From the rules analyzed above, we cannot assess any form of stability from
 linearization.
\end_layout

\begin_layout Standard
Looking at the system from the energy point of view, the result found turns
 out to be reasonable; in fact, we do not have a single energy minimum that
 it is instead shared for every value of 
\begin_inset Formula $\theta$
\end_inset

 (in fact, the point of convergence depends from each specifical initial
 condition).
 The only thing that we could eventually find out would be a Lyapunov stability,
 but this would involve further and more complex analysis.
 
\end_layout

\begin_layout Subsection
Upward position
\end_layout

\begin_layout Standard
Since the upward and downward matrices are identical aside from some signs
 on specific components, we can use the numerical results previously found
 and then suitably modify them.
 Hence, we have:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{gather*}
A_{u}=\begin{bmatrix}0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\\
0 & \frac{5169259020477411}{97834235525000} & -\frac{15506119043916576}{794903163640625} & -\frac{2559865848}{3913369421}\\
\\
0 & \frac{38382920592829641}{391336942100000} & -\frac{15475651065023064}{794903163640625} & -\frac{4751896122}{3913369421}
\end{bmatrix}\approx\begin{bmatrix}0 & 0 & 1 & 0\\
0 & 0 & 0 & 1\\
0 & 52.837 & -19.507 & -0.654\\
0 & 98.082 & -19.469 & -1.214
\end{bmatrix}\\
\\
B_{u}=\begin{bmatrix}0\\
0\\
\frac{44598579129216}{1271845061825}\\
\\
\frac{44510947365024}{1271845061825}
\end{bmatrix}\approx\begin{bmatrix}0\\
0\\
35.066\\
34.997
\end{bmatrix}
\end{gather*}

\end_inset

Now, assessing stability, and applying the same rules as the previous point,
 we get:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
eigs(A_{u})=\left\{ \begin{array}{c}
0\\
-\frac{1607239695991555}{70368744177664}\\
\frac{8300623629294261}{1125899906842624}\\
-\frac{5914786364422933}{1125899906842624}
\end{array}\right\} \approx\left\{ \begin{array}{c}
0\\
-22.840\\
7.372\\
-5.253
\end{array}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
As we expected, the upward position is an unstable equilibrium.
\end_layout

\begin_layout Section
Checking controllability
\end_layout

\begin_layout Standard
We can verify the controllability of a linear system checking if the 
\begin_inset Formula $R=\begin{bmatrix}B & AB & \cdots & A^{n-1}B\end{bmatrix}\in\mathbb{R}^{n\times nr}$
\end_inset

 matrix has full row rank, that is 
\begin_inset Formula $rank\left(R\right)=n$
\end_inset

.
 Moreover, we can verify directly with Matlab through the 
\emph on
ctrb
\emph default
 function.
\end_layout

\begin_layout Subsection
Downward position
\end_layout

\begin_layout Standard
For this position, we have: 
\begin_inset Formula 
\[
R_{d}=\begin{bmatrix}0 & \frac{4935107427201581}{140737488355328} & -\frac{6218166413817175}{8796093022208} & \frac{6825292479804947}{549755813888}\\
\\
0 & -\frac{4925410432840623}{140737488355328} & \frac{6378776113532615}{8796093022208} & -\frac{770400999661797}{68719476736}\\
\\
\frac{4935107427201581}{140737488355328} & -\frac{6218166413817175}{8796093022208} & \frac{6825292479804947}{549755813888} & -\frac{3628355444977149}{17179869184}\\
\\
-\frac{4925410432840623}{140737488355328} & \frac{6378776113532615}{8796093022208} & -\frac{770400999661797}{68719476736} & \frac{6328762140136585}{34359738368}
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
and also 
\begin_inset Formula $rank\left(R_{d}\right)=4$
\end_inset

, so this configuration of the system is controllable.
\end_layout

\begin_layout Subsection
Upward position
\end_layout

\begin_layout Standard
In this case, we have:
\begin_inset Formula 
\[
R_{u}=\begin{bmatrix}0 & \frac{4935107427201581}{140737488355328} & -\frac{6218166413817175}{8796093022208} & \frac{8858444698715643}{549755813888}\\
\\
0 & \frac{4925410432840623}{140737488355328} & -\frac{6378776113532615}{8796093022208} & \frac{4968681040599551}{274877906944}\\
\\
\frac{4935107427201581}{140737488355328} & -\frac{6218166413817175}{8796093022208} & \frac{8858444698715643}{549755813888} & -\frac{3130720068146841}{8589934592}\\
\\
\frac{4925410432840623}{140737488355328} & -\frac{6378776113532615}{8796093022208} & \frac{4968681040599551}{274877906944} & -\frac{1747114645631177}{4294967296}
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Standard
and again, we have 
\begin_inset Formula $rank\left(R_{u}\right)=4$
\end_inset

, thus allowing the possibility of designing a control for the system.
\end_layout

\begin_layout Part
Controller design and implementation
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{section}{0}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Pole placement
\end_layout

\begin_layout Standard
Once ensured that 
\begin_inset Formula $\left(A_{down},B_{down}\right)$
\end_inset

 and 
\begin_inset Formula $\left(A_{up},B_{up}\right)$
\end_inset

 pairs are controllable, it is legit to move the poles of the open loop
 system, such that, once we close the loop, we can obtain the desired behaviour.
 In particular, from a theoretical point of view, given the linear system
 
\begin_inset Formula $\dot{x}=Ax+Bu$
\end_inset

, we can consider the static feedback law 
\begin_inset Formula $u=K\left(x_{des}-x\right),$
\end_inset

so that considering the closed loop dynamics that are given by 
\begin_inset Formula $\dot{x}=\left(A-BK\right)x+BKx_{des}$
\end_inset

, we converge to the desired input (state) reference 
\begin_inset Formula $x_{des}$
\end_inset

, with 
\begin_inset Formula $K$
\end_inset

 chosen so that the eigenvalues of 
\begin_inset Formula $\left(A-BK\right)$
\end_inset

 are the ones desired.
\end_layout

\begin_layout Standard
In order to achieve this, we can use several methods such as the Achermann's
 formula or the Simon-Mitter algorithm.
 Executively, we will use the 
\emph on
place
\emph default
 function in Matlab.
\end_layout

\begin_layout Subsection
Downward position
\end_layout

\begin_layout Standard
For this linearized system, the approximated eigenvalues (used here due
 to their better readability) are:
\begin_inset Formula 
\[
eigs\left(A_{d}\right)=\left\{ \begin{array}{cccc}
0, & −17.376, & -1.673+j6.936, & -1.673-j6.936\end{array}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
Now, we have to find 
\begin_inset Formula $K_{d}$
\end_inset

 such that the matrix 
\begin_inset Formula $\left(A_{d}-B_{d}K_{d}\right)$
\end_inset

 will be asymptotically stable; looking at the eigenvalues, we can notice
 two main things:
\end_layout

\begin_layout Enumerate
we have a pole in zero, hence the linearized system is 
\emph on
marginally stable
\emph default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
We have to remember that now we are looking to the system as a linear one;
 if we simulate it, it will have a marginally stable behaviour, even if
 does not correspond to the real system (even locally).
\end_layout

\end_inset

; to solve this problem, it suffices to move it from the origin to the strictly
 negative real line.
\end_layout

\begin_layout Enumerate
the system is not in a canonical form for a second order system analysis;
 however, also using the 
\emph on
damp
\emph default
 function of Matlab, we can see that the behaviour is the one of an underdamped
 system, where the two complex conjugate poles have a damping factor 
\begin_inset Formula $\zeta\in\left(0,1\right)=0.2344$
\end_inset

; for this reason, the system converges but with a lot of oscillations.
 To prevent this, it is enough to move them into two distinct and asymptotically
 stable poles, so that the damping factor would be 
\begin_inset Formula $\geq1$
\end_inset

, that is the case of 
\emph on
over-
\emph default
 and 
\emph on
critically damped
\emph default
 systems.
\end_layout

\begin_layout Standard
Having made these observations, we can choose as desired eigenvalues: 
\begin_inset Formula 
\[
eigs\left(A_{d,pp}^{cl}\right)=eigs\left(A_{d}-B_{d}K_{d,pp}\right)=\left\{ \begin{array}{cccc}
-3, & -18, & -8, & -10\end{array}\right\} 
\]

\end_inset

where the control law is given by the feedback loop with 
\begin_inset Formula $u=K_{d}\left(x_{des}-x\right)$
\end_inset

, and:
\begin_inset Formula 
\begin{eqnarray*}
K_{d,pp} & = & \begin{bmatrix}-\frac{6117366928380881}{2251799813685248} & \frac{2971164168543337}{140737488355328} & -\frac{1270943529509367}{562949953421312} & \frac{97966944119591}{35184372088832}\end{bmatrix}\\
 & \approx & \begin{bmatrix}-2.7167 & 21.1114 & -2.2576 & 2.7844\end{bmatrix}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Upward position
\end_layout

\begin_layout Standard
In this case, the approximated eigenvalues are:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
eigs\left(A_{u}\right)=\left\{ \begin{array}{cccc}
0, & -22.840, & 7.372, & -5.253\end{array}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
By request, we want to stabilize the system, and to achieve this, we can
 make again some considerations:
\end_layout

\begin_layout Enumerate
To make the system stable, we have to move the unstable pole, so that it
 will have 
\begin_inset Formula $Re\left\{ \lambda_{i}\right\} <0$
\end_inset

.
\end_layout

\begin_layout Enumerate
We have again a pole in zero, that gives 
\emph on
marginal stability
\emph default
 at the system.
 For this reason, we have to move it away from the origin, and make it asymptoti
cally stable.
\end_layout

\begin_layout Standard
Again, to improve the readability of the system, we make the poles as integers,
 so the closed loop system becomes:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
eigs\left(A_{u,pp}^{cl}\right)=eigs\left(A_{u}-B_{u}K_{u,pp}\right)=\left\{ \begin{array}{cccc}
-3, & -23, & -4, & -6\end{array}\right\} 
\]

\end_inset

and the matrix of gain is now: 
\begin_inset Formula 
\begin{eqnarray*}
K_{u,pp} & = & \begin{bmatrix}-\frac{4689981311758687}{4503599627370496} & \frac{4054537097117843}{281474976710656} & -\frac{3142386730601753}{2251799813685248} & \frac{2065823870463971}{1125899906842624}\end{bmatrix}\\
 & \approx & \begin{bmatrix}-1.0414 & 14.4046 & -1.3955 & 1.8348\end{bmatrix}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Section
LQR control law
\end_layout

\begin_layout Standard
The Linear Quadratic Regulator controller follows the same idea of pole
 placement, but instead of empirically assigning poles in order to satisfy
 certain requirements, it focuses on doing it improving the efficiency of
 the control.
\end_layout

\begin_layout Standard
In fact, given the system 
\begin_inset Formula $\dot{x}=Ax+Bu$
\end_inset

, and the state-feedback law 
\begin_inset Formula $u=-Kx$
\end_inset

, we choose the matrix 
\begin_inset Formula $K$
\end_inset

 such that it minimize the cost function: 
\begin_inset Formula 
\[
J\left(u\right)=\int_{0}^{\infty}\left(x^{T}Qx+u^{T}Ru+2x^{T}Nu\right)dt
\]

\end_inset


\end_layout

\begin_layout Standard
In order to do so, we have to set 
\begin_inset Formula $K=R^{-1}\left(B^{T}P+N^{T}\right)$
\end_inset

, where 
\begin_inset Formula $P$
\end_inset

 is a symmetric matrix that is found solving the continuous time 
\emph on
algebraic Riccati equation
\emph default
 (
\series bold
ARE
\series default
):
\begin_inset Formula 
\[
A^{T}P+PA-\left(PB+N\right)R^{-1}\left(B^{T}P+N^{T}\right)+Q=0
\]

\end_inset

where 
\begin_inset Formula $A,B,N,Q,R$
\end_inset

 are known real coefficient matrices (in our case, 
\begin_inset Formula $N$
\end_inset

 will be equal to zero).
\end_layout

\begin_layout Subsection
Downward position
\end_layout

\begin_layout Standard
By request, the matrices must assume the values:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Q_{d}=\begin{bmatrix}0.01 & 0_{1\times3}\\
0_{3\times1} & I_{3\times3}
\end{bmatrix}\ R_{d}=10
\]

\end_inset


\end_layout

\begin_layout Standard
Using the 
\emph on
lqr
\emph default
 function in Matlab, we get the matrix 
\begin_inset Formula $K_{d,lqr}$
\end_inset

 that satisfy all the required conditions presented above.
 For the sake of completeness, we report also the eigenvalues given as secondary
 output of the function, which are the one of the matrix 
\begin_inset Formula $A_{d,lqr}^{cl}=\left(A_{d}-B_{d}K_{d,lqr}\right)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
K_{d,lqr} & = & \begin{bmatrix}\frac{2278661198716255}{72057594037927936} & -\frac{7428399756562269}{9007199254740992} & \frac{6307372313118589}{72057594037927936} & -\frac{3478848771555317}{36028797018963968}\end{bmatrix}\\
 & \approx & \begin{bmatrix}0.0316 & -0.8247 & 0.0875 & -0.0966\end{bmatrix}
\end{eqnarray*}

\end_inset


\begin_inset Formula 
\[
eigs\left(A_{d,lqr}^{cl}\right)=\left\{ \begin{array}{c}
-\frac{890264704655807}{18014398509481984}\\
-\frac{4659624664606745}{2251799813685248}+j\frac{7120251430763241}{1125899906842624}\\
-\frac{4659624664606745}{2251799813685248}-j\frac{7120251430763241}{1125899906842624}\\
-\frac{3234408201994563}{140737488355328}
\end{array}\right\} \approx\left\{ \begin{array}{c}
-0.0494\\
-2.0693+j6.3241\\
-2.0693-j6.3241\\
-22.9819
\end{array}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
From the result found above, we see that instead of following our strategy
 which involves moving poles to make the system at least 
\emph on
critically damped
\emph default
, the minimum energy approach move the poles just enough to ensure stability;
 it follows that also the gain matrix is noticeably lower than our, thus
 reducing the control effort.
\end_layout

\begin_layout Subsection
Upward position
\end_layout

\begin_layout Standard
In this case, the matrices involved in the minimization are:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Q_{u}=\begin{bmatrix}0.01 & 0_{1\times3}\\
0_{3\times1} & I_{3\times3}
\end{bmatrix}\ R_{u}=100
\]

\end_inset

while the gain matrix 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 and the eigenvalues become:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
K_{u,lqr} & = & \begin{bmatrix}-\frac{1}{100} & \frac{3554156018742015}{281474976710656} & -\frac{1266987890578365}{1125899906842624} & \frac{1759550344771959}{1125899906842624}\end{bmatrix}\\
 & \approx & \begin{bmatrix}-0.0100 & 12.6269 & -1.1253 & 1.5628\end{bmatrix}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
eigs\left(A_{u,lqr}^{cl}\right)=\left\{ \begin{array}{c}
-\frac{5099557538736035}{288230376151711744}\\
-\frac{752962117144551}{140737488355328}\\
-\frac{8079440650005905}{1125899906842624}\\
-\frac{6589480795020015}{281474976710656}
\end{array}\right\} \approx\left\{ \begin{array}{c}
-0.0177\\
-5.3501\\
-7.1760\\
-23.4105
\end{array}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
Again the poles have been slightly moved, while the unstable pole was almost
 mirrored in the stable part of the complex plane.
\end_layout

\begin_layout Part
Controllers simulation and testing
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{section}{0}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Once finished the theoretical analysis, we can proceed to simulate the obtained
 equations.
 In order to be able to look at both linearized and nonlinear system simultaneou
sly, it is easier to make a Simulink model of the overall simulation, in
 which we can highlight both structure and workflow of the solution.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Simulink_model.svg
	lyxscale 50
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Simulink Furuta model.
\end_layout

\end_inset


\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
For the linearized part, the output matrices are defined as 
\begin_inset Formula $C=eye\left(4\right)$
\end_inset

 and 
\begin_inset Formula $D=zeros\left(4,1\right)$
\end_inset

 so that we can have a perfect reading of the state 
\begin_inset Formula $\left(y=x\right)$
\end_inset

; Moreover, due to the fact that all the matrices are loaded into the Matlab
 workspace, this allow us to easily test different configuration at each
 run.
\end_layout

\begin_layout Standard
For the nonlinear system, it has been defined by the following function
 that exploits all the previously found formulas; for this reason, they
 are written in function of 
\begin_inset Formula $\theta$
\end_inset

 and 
\begin_inset Formula $\alpha$
\end_inset

, and we have to take this into account for the upward position by adding
 an offset of 
\begin_inset Formula $-\pi$
\end_inset

 for the 
\begin_inset Formula $\alpha$
\end_inset

 part:
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Matlab,numbers=left,stepnumber=5,tabsize=4"
inline false
status open

\begin_layout Plain Layout

function x_dot = furuta(u,x)
\end_layout

\begin_layout Plain Layout

% Furuta pendulum 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% renaming state in compliance with the already written code
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% th = x(1); % not used variable, saving calculations
\end_layout

\begin_layout Plain Layout

a = x(2); % Downward position 
\end_layout

\begin_layout Plain Layout

% a=x(2)+pi; % Upward position 
\end_layout

\begin_layout Plain Layout

th_d = x(3);
\end_layout

\begin_layout Plain Layout

a_d = x(4);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% assigning numerical values to symbolic ones
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Rm = 2.6; Kt = 7.68e-3; Em = 0.69; Km = 7.68e-3; Kg = 70;
\end_layout

\begin_layout Plain Layout

Eg = 0.9; mp = 0.127; lp = 0.1556; Jp = 0.0012; Jarm = 0.002;
\end_layout

\begin_layout Plain Layout

Bp = 0.0024; Barm = 0.0024; r = 0.2159; g = 9.81;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% defining matrices
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

D = [(r^2)*mp+(lp^2)*mp-(lp^2)*(cos(a)^2)*mp+Jarm, r*cos(a)*mp*lp;
\end_layout

\begin_layout Plain Layout

    r*cos(a)*mp*lp                              , (lp^2)*mp+Jp];
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

C = [2*mp*cos(a)*a_d*(lp^2)*sin(a), -mp*sin(a)*a_d*lp*r;
\end_layout

\begin_layout Plain Layout

    -mp*cos(a)*th_d*(lp^2)*sin(a) ,           0        ];
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

G = [	  0; 
\end_layout

\begin_layout Plain Layout

	mp*g*sin(a)*lp];
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

tau_m = Eg*Kg*Em*Kt*(u-Kg*Km*th_d)/Rm;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

tau = [tau_m - Barm*th_d;
\end_layout

\begin_layout Plain Layout

			-Bp*a_d 	];
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% defining the non-linear equations
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

x_dot  = zeros(4,1);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

x_dot(1:2) = [th_d;
\end_layout

\begin_layout Plain Layout

               a_d]; 
\end_layout

\begin_layout Plain Layout

x_dot(3:4) = (D^-1)*(tau - G - C*[th_d; a_d]);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Open loop response
\end_layout

\begin_layout Standard
As per the specification, we want to observe the behaviour of the linearized
 system when no input is applied (the nonlinear simulations will be done
 later in the coursework, at the section 5).
\end_layout

\begin_layout Standard
As initial condition, the following vector has been chosen:
\begin_inset Formula 
\[
\begin{bmatrix}x_{1}\left(0\right) & x_{2}\left(0\right) & x_{3}\left(0\right) & x_{4}\left(0\right)\end{bmatrix}^{T}=\begin{bmatrix}0.5 & \nicefrac{\pi}{4} & 0.3 & 0.1\end{bmatrix}^{T}
\]

\end_inset

so that the linearized system follows quite well the non linear one, but
 the differences in their evolutions start to show up.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_openLoop.svg
	lyxscale 50
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Open loop response of the linearized system.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can then zoom over the 
\begin_inset Formula $\alpha$
\end_inset

 variable (the one with highest interest), in order to show its trajectory
 over time.
 As we can notice, its behaviour is clearly 
\emph on
underdamped
\emph default
, so the variable goes to zero oscillating around it.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_openLoop_alpha.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/Lin_K_down_alpha.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Evolution over time for 
\begin_inset Formula $\alpha\left(t\right)$
\end_inset

 and 
\begin_inset Formula $\alpha_{cl,pp}\left(t\right)$
\end_inset

 (without and with control).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Once the control 
\begin_inset Formula $K_{d,pp}$
\end_inset

 is applied, the 
\begin_inset Formula $\alpha$
\end_inset

 angle has now only a very slight overshoot, while the damping is gone (we
 converge to zero from the same side, instead of oscillating around it).
\end_layout

\begin_layout Section
Square-wave reference
\end_layout

\begin_layout Standard
We have now to feed a desired reference that changes over a period of time;
 we can then expect two different behaviours:
\end_layout

\begin_layout Itemize
The frequency of the square wave is 
\emph on
low
\emph default
 with respect to the dynamics of the system; in this case, the controlled
 pendulum will reach the target state (asymptotically) before moving again
 once the set-point is changed;
\end_layout

\begin_layout Itemize
The frequency is 
\emph on
high
\emph default
; in this case, the physical system is not sufficiently fast to keep up
 with the change of the target value, hence the state of the system will
 oscillate trying to follow the input, but with a lower amplitude.
 Therefore, we can state that the system acts as a Low Pass Filter (LPF)
 with respect to the input signal.
\end_layout

\begin_layout Standard
In the simulations, the same initial conditions as the previous point are
 applied (even if after the initial transient behaviour, the system will
 follow the dynamics imposed by the reference signal, thus making them useless);
 moreover, two different cases are presented, with lower 
\begin_inset Formula $\left(0.1Hz\right)$
\end_inset

 and higher 
\begin_inset Formula $1Hz$
\end_inset

 frequencies.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_down_ref_slow.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with frequency of 
\begin_inset Formula $\theta_{ref}\left(t\right)=0.1Hz$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_down_ref_fast.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with frequency of 
\begin_inset Formula $\theta_{ref}\left(t\right)=1Hz$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can see from the simulations above, the results adheres to the discussion
 presented before.
\end_layout

\begin_layout Section
LQR performance
\end_layout

\begin_layout Standard
As previously discussed, the LQR is characterized by the attempt to reduce
 the global energy used by control.
 Furthermore, the coefficients of the 
\begin_inset Formula $Q$
\end_inset

 and 
\begin_inset Formula $R$
\end_inset

 matrices are related to how much each component weighs in the cost function;
 as result, it is reasonable to assume that with a very small weight for
 the 
\begin_inset Formula $x_{1}$
\end_inset

component of the state, the error over 
\begin_inset Formula $\theta\left(t\right)$
\end_inset

 would be 
\begin_inset Quotes eld
\end_inset

tolerated
\begin_inset Quotes erd
\end_inset

 more, hence putting less effort (or smaller closed loop poles) for it.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_lqr_d_ref_slow.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with frequency of 
\begin_inset Formula $\theta_{ref}\left(t\right)=0.1Hz$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As previously supposed, 
\begin_inset Formula $\alpha,\dot{\theta},\dot{\alpha}$
\end_inset

 go to their reference quickly, while 
\begin_inset Formula $\theta$
\end_inset

, having a much lower associated weight, it is not able to reach the set
 point value that changes over time (it would work for much slower square
 wave signals).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_lqr_d_ref_fast.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with frequency of 
\begin_inset Formula $\theta_{ref}\left(t\right)=1Hz$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Increasing the frequency worsens the behaviour, with 
\begin_inset Formula $\theta$
\end_inset

 that converges even more slowly and pushing itself nearer to zero.
\end_layout

\begin_layout Section
Upward position
\end_layout

\begin_layout Standard
By requirements, we have to set 
\begin_inset Formula $\theta\left(t\right)=\pi,\forall t\in\mathbb{R}$
\end_inset

 for all the following simulations, in which we will validate our control
 for the linearized case.
\end_layout

\begin_layout Subsection
Constant reference signal
\end_layout

\begin_layout Standard
For this case, we want to reach the unstable equilibrium in the upward position
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
We have to bear in mind that the upward position is the new origin thanks
 to the change of coordinates; for this reason, we can treat in Simulink
 both the initial conditions and the reference signals as simple deviations
 from the origin.
\end_layout

\end_inset

, starting with similar initial conditions to the ones presented in the
 previous section:
\begin_inset Formula 
\[
\begin{bmatrix}x_{1}\left(0\right) & x_{2}\left(0\right) & x_{3}\left(0\right) & x_{4}\left(0\right)\end{bmatrix}^{T}=\begin{bmatrix}0.5 & \nicefrac{\pi}{8} & 0.3 & 0.1\end{bmatrix}^{T}
\]

\end_inset


\end_layout

\begin_layout Standard
At the same time, the constant reference signal is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{bmatrix}x_{1,ref}\left(t\right) & x_{2,ref}\left(t\right) & x_{3,ref}\left(t\right) & x_{4,ref}\left(t\right)\end{bmatrix}^{T}=\begin{bmatrix}\pi & 0 & 0 & 0\end{bmatrix}^{T}
\]

\end_inset

that is a reasonable goal for the upward pendulum.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_up.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{up,pp}$
\end_inset

 control.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can see, the state goes to steady state in few seconds, stabilizing
 the system to the desired reference.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_lqr_u.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{up,lqr}$
\end_inset

 control.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Similarly to the previous section, the LQR section shows up a behaviour
 that is similar to the previous one for 
\begin_inset Formula $\alpha,\dot{\theta},\dot{\alpha}$
\end_inset

, while being two order of magnitude slower for 
\begin_inset Formula $\theta$
\end_inset

 (even if not shown, the 
\begin_inset Formula $x_{1}$
\end_inset

 state approaches the reference signal at around 300 seconds, 100 times
 slower with respect to the other controller and in alignment with a 100
 times smaller weight for its component in the matrix 
\begin_inset Formula $Q$
\end_inset

).
\end_layout

\begin_layout Subsection
Square-wave reference signal
\end_layout

\begin_layout Standard
This time, in order to have less transient and fit better the simulations
 found on the paper sheet, the initial conditions will be:
\begin_inset Formula 
\[
\begin{bmatrix}x_{1}\left(0\right) & x_{2}\left(0\right) & x_{3}\left(0\right) & x_{4}\left(0\right)\end{bmatrix}^{T}=\begin{bmatrix}\pi-0.1 & \nicefrac{\pi}{8} & 0.3 & 0.1\end{bmatrix}^{T}
\]

\end_inset


\end_layout

\begin_layout Standard
In this way, we can easily observe the steady state oscillations while changing
 
\begin_inset Formula $\alpha\left(t\right)=\pm45°$
\end_inset

.
 Furthermore, two different frequencies are tested for both controllers,
 in order to show their behaviour.
\end_layout

\begin_layout Subsubsection
Pole placement control
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_up_sw_low.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{up,pp}$
\end_inset

 control and 
\begin_inset Formula $\alpha_{ref}\left(t\right)=0.1Hz$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_up_sw_vhigh.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{up,pp}$
\end_inset

 control and 
\begin_inset Formula $\alpha_{ref}\left(t\right)=10Hz$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can notice, the system try to keep up with the changing reference,
 but the system is not able to maintain an 
\begin_inset Formula $\alpha$
\end_inset

 angle that is different from zero.
 Thinking about the physical pendulum, it is easy to understand that in
 order to keep 
\begin_inset Formula $\alpha\neq0$
\end_inset

, the 
\begin_inset Formula $\theta$
\end_inset

 angle must continue to increase, as well as 
\begin_inset Formula $\dot{\theta}$
\end_inset

; that would imply that the state would not be limited, violating the asymptotic
ally stability property of the closed loop system.
\end_layout

\begin_layout Standard
Finally, with the increasing of the frequency, the system tracking capability
 is less effective.
 oscillating nearer the target value for 
\begin_inset Formula $\theta$
\end_inset

 and the origin for 
\begin_inset Formula $\alpha$
\end_inset

.
\end_layout

\begin_layout Subsubsection
LQR control
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_lqr_u_sw_low.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{up,lqr}$
\end_inset

 control and 
\begin_inset Formula $\alpha_{ref}\left(t\right)=0.1Hz$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Lin_K_lqr_u_sw_high.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{up,lqr}$
\end_inset

 control and 
\begin_inset Formula $\alpha_{ref}\left(t\right)=1Hz$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Again, the LQR control has the advantage of do not care about a greater
 error for the 
\begin_inset Formula $\theta$
\end_inset

 variable, thus allowing a longer period nearer to the reference value for
 
\begin_inset Formula $\alpha$
\end_inset

.
 While 
\begin_inset Formula $10Hz$
\end_inset

 LQR has not been included due to its not particularly relevant behaviour,
 it is interesting to notice that for 
\begin_inset Formula $1Hz$
\end_inset

 the system tracks quite well the target value, thus meaning that we are
 near the natural oscillation frequency of the system for the angular position.
\end_layout

\begin_layout Section
Nonlinear system
\end_layout

\begin_layout Standard
Throughout this section, we will run the same simulations seen before, to
 find out that only for a neighbourhood of the origin the linearized and
 non linear systems will work similarly (approximately few degrees, that
 means tenths of radians).
 Both the two cases will be analysed, the downward and the upward position,
 and for the latter one we change the coordinates in order to have the same
 origin stabilization approach.
\end_layout

\begin_layout Subsection
Downward position
\end_layout

\begin_layout Subsubsection
Open loop response
\end_layout

\begin_layout Standard
It is interesting to see the open loop response also for the nonlinear case;
 in particular, we expect that the shape of state evolution would be the
 more similar to the linearized one the less the initial condition differs
 from the origin.
 For this reason, as said in the linearized case above, the chosen initial
 conditions:
\begin_inset Formula 
\[
\begin{bmatrix}x_{1}\left(0\right) & x_{2}\left(0\right) & x_{3}\left(0\right) & x_{4}\left(0\right)\end{bmatrix}^{T}=\begin{bmatrix}0.5 & \nicefrac{\pi}{4} & 0.3 & 0.1\end{bmatrix}^{T}
\]

\end_inset

are sufficiently displaced from the origin to show a difference between
 the two behaviours, but not enough to be pretty similar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_openLoop.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/Lin_openLoop.svg
	lyxscale 50
	width 49text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Open loop response of the nonlinear system (left) compared with the linearized
 (right).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can notice from the above plot, 
\begin_inset Formula $\dot{\theta}$
\end_inset

 initially has a sharper shape, while 
\begin_inset Formula $\dot{\alpha}$
\end_inset

 reaches bigger values in module, given by the nonlinear components neglected.
 Overall, for such small initial conditions, the behaviour is quite similar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_K_down_alpha.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/Lin_K_down_alpha.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Evolution over time for 
\begin_inset Formula $\alpha_{cl}\left(t\right)$
\end_inset

 with 
\begin_inset Formula $K_{d,pp}$
\end_inset

 for NL and Lin systems.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Focusing on the 
\begin_inset Formula $\alpha\left(t\right)$
\end_inset

 behaviour, we can observe that it is quite similar in both cases, with
 slighly less overshoot and slightly longer setting time for nonlinear system.
 Overall, the initial conditions near zero allow to reduce differences.
\end_layout

\begin_layout Subsubsection
Basin of convergence
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_K_unstable.svg
	lyxscale 50
	width 100text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Evolution over time from an unstable condition 
\begin_inset Formula $\left(K_{d,pp}\ ,\ x_{0}=\left[0,\nicefrac{\pi}{4},0,0\right]^{T}\right)$
\end_inset

 of the NL system.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Before proceeding in further simulations, it is useful to introduce some
 boundaries for possible initial conditions.
 As we know, linearized systems can describe the behaviour of a nonlinear
 one only in a neighbourhood of the origin.
 It follows that it can be defined a specific interval of initial conditions
 for which the system is stabilized, hence the controller works also for
 the real case.
\end_layout

\begin_layout Standard
From the simulation above, taken from an unstable 
\begin_inset Formula $x_{0}$
\end_inset

, we can see that the control is not enough to bring the state to zero before
 the gravity pull the pendulum to the downward position.
 At that point, the system starts to oscillates around 
\begin_inset Formula $\frac{\pi}{2}$
\end_inset

 while keeping to accelerate along the 
\begin_inset Formula $\theta$
\end_inset

 variable, trying to keep the arm up.
 It is obvious that in the real world, we are limited about the speed we
 can reach, so it is inevitable that the arm will finally go in the downward
 position in a finite amount of time.
 
\end_layout

\begin_layout Standard
In order to conduct batch tests over the admissible initial conditions,
 the system has been ported as a function to be integrated through ode45;
 moreover the following Matlab code has been written to separate good from
 bad initial states (the plotting part was given to the 
\emph on
scatter
\emph default
 function):
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\size footnotesize
\begin_inset listings
lstparams "language=Matlab,numbers=left,numberstyle={\footnotesize},stepnumber=5,tabsize=4"
inline false
status open

\begin_layout Plain Layout

%% Nonlinear evolution (ODE)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Check stability
\end_layout

\begin_layout Plain Layout

steps = 15; % USE AT LEAST TWO.
\end_layout

\begin_layout Plain Layout

state_blue = [];
\end_layout

\begin_layout Plain Layout

state_red = [];
\end_layout

\begin_layout Plain Layout

for alpha = -pi/2:(2*pi/(4*(steps-1))):pi/2
\end_layout

\begin_layout Plain Layout

    for theta = -pi:(2*pi/((steps-1))):pi
\end_layout

\begin_layout Plain Layout

                
\end_layout

\begin_layout Plain Layout

		x_init = [theta; alpha; 0; 0];
\end_layout

\begin_layout Plain Layout

		tstart = tic;
\end_layout

\begin_layout Plain Layout

    	[~,x] = ode45(@(t,x) furuta_ode(t,x,K_lqr_u),...
\end_layout

\begin_layout Plain Layout

				[0,10],x_init,...
\end_layout

\begin_layout Plain Layout

				odeset('Events',@(t,x) time_event(t,x,tstart)));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		error = abs( x(end,2)/(2*pi) - round(x(end,2)/(2*pi)) );
\end_layout

\begin_layout Plain Layout

        if (error < 0.1)
\end_layout

\begin_layout Plain Layout

            state_blue(end+1,:) = [theta, alpha];
\end_layout

\begin_layout Plain Layout

		else
\end_layout

\begin_layout Plain Layout

            state_red(end+1,:) = [theta, alpha];
\end_layout

\begin_layout Plain Layout

		end
\end_layout

\begin_layout Plain Layout

	end
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
However, some problems arises if we go through simulations blindly: 
\end_layout

\begin_layout Itemize
If the system is unstable, the simulation goes really slow, since Matlab
 is trying to integrate a lot of point that are diverging.
 To avoid inhuman times, we can bound our simulation so that it cannot lasts
 more than 2 seconds of real time (the limit is defined in the 
\emph on
time_event
\emph default
 function called as an 
\emph on
event
\emph default
 by 
\emph on
ode45
\emph default
); in fact, all the simulations end up in tenths of seconds when they converge,
 and if not, cutting the simulation and seeing that the error is still relevant
 (if 
\begin_inset Formula $\left|\alpha\left(t\right)\right|\thickapprox\frac{\pi}{2}$
\end_inset

 , the variable 
\emph on
error
\emph default
 will be around 0.5), means that the system has not been converged, and it
 will never do.
\end_layout

\begin_layout Itemize
The system cannot be stabilized for sure for 
\begin_inset Formula $\left|\alpha\left(0\right)\right|\geq\frac{\pi}{2}$
\end_inset

 (at least with simpler controller, that does not exploit swinging from
 the downward position); for this reason, we can reduce the interval upon
 which we select initial conditions.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\theta\in\left[-\pi,\pi\right]$
\end_inset

; moreover, thinking about the physical system, its initial condition marginally
 influences the ability of converging.
 In fact, very big initial conditions could influence the stability properties,
 however, it is enough to set some slow asymptotically poles such that its
 initial convergence can be sacrificed to let 
\begin_inset Formula $\alpha$
\end_inset

 to reach the upward position, and then converging to the global origin.
 As this approach suggests, it is the same that justify the use of LQR controlle
r, such that we can conveniently choose weights to be assigned accordingly
 to a certain priority given by us.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Stab_K_up2.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/Stab_K_lqr_u2.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Upward (typo in figure) stability of initial conditions with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As previously thought, the system converges for only a neighbourhood of
 the origin; moreover, the LQR approach proves to be better since does not
 force 
\begin_inset Formula $\theta$
\end_inset

 to converge too fast, leading to a larger band of controllability.
 Another interesting detail is that the symmetry of the maximum controllable
 
\begin_inset Formula $\alpha$
\end_inset

 angle has a diagonal simmetry, not vertical.
 This is expected because the pendulum must rapidly increase 
\begin_inset Formula $\theta$
\end_inset

 to keep up with its falling upper part, so for each 
\begin_inset Formula $\alpha_{0}$
\end_inset

, there will be for sure an optimal starting value 
\begin_inset Formula $\theta_{0}^{*}\in\mathbb{R}$
\end_inset

 such that following a certain profile 
\begin_inset Formula $\theta^{*}\left(t\right)$
\end_inset

, the system will be stabilized.
 The problem is that we cannot find an easy closed formula to determine
 it, and moreover every 
\begin_inset Formula $2\pi$
\end_inset

 the system reaches the target value for 
\begin_inset Formula $\theta$
\end_inset

, so we have a limited space to build up speed and we have to rely on faster
 poles, that may break the stability.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/Finer_Stab_K_up.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/Finer_Stab_K_lqr_u.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Finer upward stability of at 
\begin_inset Formula $\theta_{0}=0$
\end_inset

, with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Due to the long time required for simulating each initial condition, we
 stick with a specific 
\begin_inset Formula $\theta_{0}$
\end_inset

 and then span the interval between the greatest stable 
\begin_inset Formula $x_{0}$
\end_inset

and the smallest unstable one, from the previous simulation, increasing
 the number of points between the above-mentioned conditions.
 As we can notice from the figure above (in which the last stable initial
 condition is highlighted), the LQR control has an advantage over the arbitrary
 pole placement approach, that increases as much as we move away from the
 
\begin_inset Formula $\theta_{0}=0$
\end_inset

 condition.
 For instance, with this 
\begin_inset Formula $\theta_{0}$
\end_inset

, we can stabilize the system until at least 
\begin_inset Formula $40.9665°,K_{pp}$
\end_inset

, or 
\begin_inset Formula $46.4096°,K_{lqr}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hspace{}
\length 25text%
\end_inset


\begin_inset Graphics
	filename imgs/Stab_K_d.svg
	lyxscale 50
	width 50text%

\end_inset


\begin_inset space \hspace{}
\length 25text%
\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Downward stability of the NL system (both 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 have the same results).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finally, as can be imagined, the downward position does not have any problem
 to be reached by any controller, being an asymptotically stable equilibrium
 per se.
\end_layout

\begin_layout Subsubsection
Constant reference signal
\end_layout

\begin_layout Standard
We are now ready to proceed though the remaining simulations.
 First of all, we want to see what happens when we try to follow a constant
 reference signal, both up and downwards.
 In order to have a credible interval, we set a 
\begin_inset Formula $\alpha=\nicefrac{\pi}{8}\ ,\ \theta=\pi$
\end_inset

 reference both downward and upward position, while starting from the two
 origins (we refer in this way to the two equilibria).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_ref_K_up.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_ref_K_lqr_u.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Upward stability, with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller of the NL system.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can see from the figure, the system tries to follow the reference
 signal (more in the case of the LQR control); however, it is impossible
 to keep it constantly (we ought to have a 
\begin_inset Formula $\theta$
\end_inset

 that always increases as well as the speed), so 
\begin_inset Formula $\alpha$
\end_inset

 goes eventually to zero.
 The main difference between the two controllers is that thanks to the lower
 weight over the 
\begin_inset Formula $x_{1}$
\end_inset

 component for the LQR controller, the 
\begin_inset Formula $\theta$
\end_inset

 angle can increase more its magnitude, that corresponds to do more spins
 before settling (as we can see from the decreasing value of 
\begin_inset Formula $\dot{\theta}$
\end_inset

) over some 
\begin_inset Formula $\left(2k+1\right)\pi$
\end_inset

 position, plus an error given by a non zero reference for 
\begin_inset Formula $\alpha$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_ref_K_down.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_ref_K_lqr_d.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Downward stability, with 
\begin_inset Formula $K_{d,pp}$
\end_inset

 and 
\begin_inset Formula $K_{d,lqr}$
\end_inset

 controller of the NL system.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this case we have a very similar behaviour as before, with obviously
 lower values in magnitude for 
\begin_inset Formula $\theta$
\end_inset

 due to the stable nature of the downward position and to a lower weight
 in the control part of the cost function (remember that 
\begin_inset Formula $R_{d}=10$
\end_inset

).
\end_layout

\begin_layout Subsection
Square-wave reference
\end_layout

\begin_layout Standard
For this last section, we have to repeat the square-wave tracking experiment
 done previously; for this reason, we will have two subsection, one for
 the downward position and one for the upward one.
\end_layout

\begin_layout Subsubsection
Downward position
\end_layout

\begin_layout Standard
In this case, 
\begin_inset Formula $\alpha$
\end_inset

 is set to a constant 0 reference signal, while the 
\begin_inset Formula $\theta$
\end_inset

 angle oscillates.
 As the previous case, we will have both high and low frequency, as well
 as different amplitudes.
\end_layout

\begin_layout Paragraph
Low Frequency (
\begin_inset Formula $f$
\end_inset

=0.1 Hz)
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_down_s_45.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_d_s_45.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{d,pp}$
\end_inset

 and 
\begin_inset Formula $K_{d,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\theta_{ref}=\pm45°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_down_s_135.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_d_s_135.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{d,pp}$
\end_inset

 and 
\begin_inset Formula $K_{d,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\theta_{ref}=\pm135°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
High Frequency (
\begin_inset Formula $f$
\end_inset

=1 Hz)
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_down_f_45.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_d_f_45.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{d,pp}$
\end_inset

 and 
\begin_inset Formula $K_{d,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\theta_{ref}=\pm45°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_down_f_135.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_d_f_135.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{d,pp}$
\end_inset

 and 
\begin_inset Formula $K_{d,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\theta_{ref}=\pm135°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As it is easy to imagine, the downward position is robust to changes of
 reference signal, both in frequency and amplitude; as said in the other
 simulations already done, the LQR control has a really slow pole associated
 with the 
\begin_inset Formula $\theta$
\end_inset

 component, so it tracks badly targets that change over time.
\end_layout

\begin_layout Subsubsection
Upward position
\end_layout

\begin_layout Standard
This time, we have two degrees of freedom along which we can increase the
 amplitude; in fact, in addiction to 
\begin_inset Formula $\alpha_{0}$
\end_inset

 as analysed in the previous subsection, for which after a certain amplitude
 the system is unstable, if the control is too aggressive along 
\begin_inset Formula $\theta$
\end_inset

 we may end up in breaking stability, as we will later see.
 Again, the initial condition will be the upward origin for each simulation.
\end_layout

\begin_layout Paragraph
Low Frequency (
\begin_inset Formula $f$
\end_inset

=0.1 Hz), 
\begin_inset Formula $\boldsymbol{\theta}$
\end_inset

 changes.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_s_90th.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_s_90th.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\theta_{ref}=\pm90°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_s_180th.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_s_180th.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\theta_{ref}=\pm180°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can expect, the system can track the changing reference in the pole
 placement controller, while the LQR one is struggling to follow the target.
 It is interesting to notice – accondingly to the behaviour of a real system
 – that only for the big leap of 
\begin_inset Formula $\theta$
\end_inset

, the nonlinear dynamics show up.
\end_layout

\begin_layout Paragraph
High Frequency (
\begin_inset Formula $f$
\end_inset

=1 Hz), 
\begin_inset Formula $\boldsymbol{\theta}$
\end_inset

 changes.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_f_90th.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_f_90th.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\theta_{ref}=\pm90°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_f_180th.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_f_180th.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\theta_{ref}=\pm180°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
When the frequency is higher, as we have seen for the linearized system,
 the 
\begin_inset Formula $\alpha$
\end_inset

 component is near the natural oscillating frequency, and its magnitude
 increases a lot.
 Finally, when 
\begin_inset Formula $\theta_{ref}$
\end_inset

 magnitude is too high, the system is not able to stay up, so we end up
 in the 
\begin_inset Formula $\alpha\thickapprox\frac{\pi}{2}$
\end_inset

 neighbourhood that means that we are no longer able to control the system.
 Interestly enough, since our controller try to follow as fast as possible
 
\begin_inset Formula $\theta_{ref}$
\end_inset

, it ends up breaking the stability, while the LQR one is too slow to catch
 up 
\begin_inset Formula $\theta_{ref}$
\end_inset

 thus preventing the system to became unstable.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Paragraph
Low Frequency (
\begin_inset Formula $f$
\end_inset

=0.1 Hz), 
\begin_inset Formula $\boldsymbol{\alpha}$
\end_inset

 changes.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_s_10a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_s_10a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\alpha_{ref}=\pm10°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_s_40a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_s_40a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\alpha_{ref}=\pm40°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
High Frequency (
\begin_inset Formula $f$
\end_inset

=1 Hz), 
\begin_inset Formula $\boldsymbol{\alpha}$
\end_inset

 changes.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_f_10a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_f_10a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\alpha_{ref}=\pm10°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_f_40a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_f_40a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\alpha_{ref}=\pm40°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Very High Frequency (
\begin_inset Formula $f$
\end_inset

=10 Hz), 
\begin_inset Formula $\boldsymbol{\alpha}$
\end_inset

 changes.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename imgs/NL_sw_K_up_vf_40a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Graphics
	filename imgs/NL_sw_K_lqr_u_vf_40a.svg
	lyxscale 50
	width 49text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
State evolution over time with 
\begin_inset Formula $K_{u,pp}$
\end_inset

 and 
\begin_inset Formula $K_{u,lqr}$
\end_inset

 controller, 
\begin_inset Formula $\alpha_{ref}=\pm40°$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In all the cases above, it is noticeable how the evolution of 
\begin_inset Formula $\theta$
\end_inset

 depends from the strength imposed by the controller; moreover, we have
 two cases for which the NL system behaves like the linearized one:
\end_layout

\begin_layout Itemize
when the 
\begin_inset Formula $\alpha_{ref}$
\end_inset

 
\emph on
angle
\emph default
 is 
\emph on
low
\emph default
: in this case, for any frequency of the 
\begin_inset Formula $\alpha_{ref}$
\end_inset

 square-wave, the behaviour is similar, as expected;
\end_layout

\begin_layout Itemize
when the 
\emph on
frequency
\emph default
 of 
\begin_inset Formula $\alpha_{ref}$
\end_inset

 square-wave is 
\emph on
high
\emph default
: in this case, the physical system, acting like a Low Pass Filter, is not
 able to reach a sufficiently large state that would bring the system to
 instability.
 As the frequency increases, the allowed 
\begin_inset Formula $\alpha_{ref}$
\end_inset

 angle does the same, reaching also previously unstable angles.
\end_layout

\begin_layout Standard
The difference from the linearized system is that there we had a controllable
 couple 
\begin_inset Formula $\left(A_{u},B_{u}\right)$
\end_inset

, so by definition we can reach any state.
 For the nonlinear case, we have instead states that are equivalent to others,
 so it is not true that increasing the state would automatically increase
 the error from the target value.
\end_layout

\end_body
\end_document
